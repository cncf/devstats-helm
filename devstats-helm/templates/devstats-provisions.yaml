{{- $skipProvisions := .Values.skipProvisions -}}
{{ if not $skipProvisions }}
{{- $root := . -}}
{{- range $index, $_ := .Values.projects -}}
{{- if and (or (eq ($index|int) ($root.Values.indexProvisionsFrom|int)) (gt ($index|int) ($root.Values.indexProvisionsFrom|int))) (lt ($index|int) ($root.Values.indexProvisionsTo|int)) -}}
---
apiVersion: v1
kind: Pod
metadata:
  namespace: '{{ $root.Values.namespace }}'
  name: '{{ $root.Values.provisionPodName }}-{{ .proj }}'
  labels:
    name: devstats
    type: 'provision'
    proj: {{ .proj }}
spec:
  containers:
  - command:
    - {{ $root.Values.provisionCommand }}
{{ if $root.Values.provisionCommandArgs }}
    args:
{{- with $root.Values.provisionCommandArgs -}}
{{ toYaml . | nindent 6 }}
{{ end }}
{{ end }}
{{ if $root.Values.useProvisionsResourcesLimits }}
    resources:
      requests:
        memory: '{{ $root.Values.requestsProvisionsMemory }}'
        cpu: '{{ $root.Values.requestsProvisionsCPU }}'
      limits:
        memory: '{{ $root.Values.limitsProvisionsMemory }}'
        cpu: '{{ $root.Values.limitsProvisionsCPU }}'
{{ end }}
    env:
    - name: PROJ
      value: {{ .proj }}
    - name: PROJDB
      value: {{ .db }}
    - name: PROJREPO
      value: '{{ .repo }}'
    - name: SKIPTEMP
      value: '{{ $root.Values.skipTemp }}'
    - name: GIANT
      value: '{{ $root.Values.giantProv }}'
    - name: NOLOCK
      value: "1"
    - name: NOBACKUP
      value: "1"
    - name: SKIPADDALL
      value: '{{ $root.Values.skipAddAll }}'
    - name: FORCEADDALL
      value: '{{ $root.Values.forceAddAll }}'
    - name: HEALTH
      value: '{{ $root.Values.health }}'
    - name: TEST_SERVER
      value: '{{ $root.Values.testServer }}'
    - name: PROD_SERVER
      value: '{{ $root.Values.prodServer }}'
    - name: ONLY
      value: {{ .proj }}
    - name: RESTORE_FROM
      value: '{{ $root.Values.restoreFrom }}'
    - name: WAITBOOT
      value: '{{ $root.Values.waitForBootstrap }}'
    - name: GHA2DB_PROPAGATE_ONLY_VAR
      value: "1"
    - name: GHA2DB_MAX_HIST
      value: '{{ .maxHist }}'
    - name: GHA2DB_NCPUS
      value: '{{ $root.Values.nCPUs }}'
    - name: GHA2DB_RECALC_RECIPROCAL
      value: '{{ $root.Values.recalcReciprocal }}'
    - name: GHA2DB_DEBUG
      value: '{{ $root.Values.debug }}'
    - name: GHA2DB_CMDDEBUG
      value: '{{ $root.Values.cmdDebug }}'
    - name: GHA2DB_GITHUB_DEBUG
      value: '{{ $root.Values.githubDebug }}'
    - name: GHA2DB_QOUT
      value: '{{ $root.Values.queryOut }}'
    - name: GHA2DB_REPOS_DIR
      value: '{{ $root.Values.reposDir }}'
    - name: GET_AFFS_FILES
      value: '{{ $root.Values.getAffsFiles }}'
    - name: GHA2DB_CHECK_IMPORTED_SHA
      value: '{{ $root.Values.checkImportedSHA }}'
    - name: SKIP_IMP_AFFS
      value: '{{ $root.Values.skipImpAffs }}'
    - name: SKIP_UPD_AFFS
      value: '{{ $root.Values.skipUpdAffs }}'
    - name: GHA2DB_COMPANY_ACQ_YAML
      value: '{{ $root.Values.companyAcq }}'
    - name: GHA2DB_PROJECTS_YAML
      value: {{ $root.Values.projectsFile }}
    - name: GHA2DB_PROJECTS_OVERRIDE
      value: {{ $root.Values.projectsOverride }}
    - name: GHA2DB_AFFILIATIONS_JSON
      value: '{{ $root.Values.affiliations }}'
    - name: GHA2DB_COMPUTE_ALL
      value: '{{ $root.Values.forceComputeAll }}'
    - name: GHA2DB_SKIP_METRICS
      value: '{{ $root.Values.skipMetrics }}'
    - name: GHA2DB_EXCLUDE_VARS
      value: '{{ $root.Values.excludeVars }}'
    - name: GHA2DB_ONLY_METRICS
      value: '{{ $root.Values.onlyMetrics }}'
    - name: GHA2DB_FORCE_PERIODS
      value: '{{ $root.Values.periods }}'
    - name: USE_FLAGS
      value: '{{ $root.Values.useFlagsProv }}'
    - name: SKIP_AFFS_LOCK
      value: '{{ .skipAffsLock }}'
    - name: AFFS_LOCK_DB
      value: '{{ .affsLockDB }}'
    - name: NO_DURABLE
      value: '{{ .noDurable }}'
    - name: REPOS
      value: '{{ $root.Values.useRepos }}'
    - name: PDROP
      value: '{{ $root.Values.reinitDropDB }}'
    - name: TSDB_DROP
      value: '{{ $root.Values.tsdbDrop }}'
    - name: MERGE_MODE
      value: '{{ $root.Values.mergeMode }}'
    - name: ONLY_GHA
      value: '{{ $root.Values.onlyGHA }}'
    - name: SKIP_ECFRG_RESET
      value: '{{ $root.Values.skipECFRGReset }}'
    - name: SKIPGHA
      value: '{{ $root.Values.skipGHA }}'
    - name: GHA2DB_METRICS_YAML
      value: '{{ $root.Values.metricsYAML }}'
    - name: GHA2DB_TAGS_YAML
      value: '{{ $root.Values.tagsYAML }}'
    - name: GHA2DB_COLUMNS_YAML
      value: '{{ $root.Values.columnsYAML }}'
    - name: GHA2DB_GITHUB_OAUTH
      valueFrom:
        secretKeyRef:
          name: {{ $root.Values.oauthSecret }}
          key: GHA2DB_GITHUB_OAUTH.secret
    - name: PG_HOST
      valueFrom:
        secretKeyRef:
          name: {{ $root.Values.pgSecret }}
          key: PG_HOST.secret
    - name: PG_PORT
      valueFrom:
        secretKeyRef:
          name: {{ $root.Values.pgSecret }}
          key: PG_PORT.secret
    - name: PG_PASS
      valueFrom:
        secretKeyRef:
          name: {{ $root.Values.pgSecret }}
          key: PG_PASS.secret
    - name: PG_PASS_RO
      valueFrom:
        secretKeyRef:
          name: {{ $root.Values.pgSecret }}
          key: PG_PASS_RO.secret
    - name: PG_PASS_TEAM
      valueFrom:
        secretKeyRef:
          name: {{ $root.Values.pgSecret }}
          key: PG_PASS_TEAM.secret
    - name: PG_ADMIN_USER
      valueFrom:
        secretKeyRef:
          name: {{ $root.Values.pgSecret }}
          key: PG_ADMIN_USER.secret
    image: {{ $root.Values.provisionImage }}
    imagePullPolicy: {{ $root.Values.imagePullPolicy }}
    name: '{{ $root.Values.provisionPodName }}-{{ .proj }}'
    volumeMounts:
    - name: '{{ $root.Values.volumeMountName }}-{{ .proj }}'
      mountPath: '{{ $root.Values.volumeMountPath }}'
  volumes:
  - name: '{{ $root.Values.volumeName }}-{{ .proj }}'
    persistentVolumeClaim:
      claimName: '{{ $root.Values.pvName }}-{{ .proj }}'
  restartPolicy: {{ $root.Values.provisionRestartPolicy }}
  nodeSelector:
{{- with $root.Values.appNodeSelector -}}
{{ toYaml . | nindent 4 }}
{{ end }}
{{ end }}
{{ end }}
{{ end }}
