# ARTWORK
# Secrets that can be set via files in `./secrets/*.secret`, via command line by `--set 'pgAdminUser=xyz,pgHost=host.com,...'` or even uncomment them in the lines below.
# pgAdminUser: ''
# pgHost: ''
# pgHostRO: ''
# pgPass: ''
# pgPassRO: ''
# pgPassTeam: ''
# pgPassRep: ''
# pgPort: ''
# githubOAuth: ''
# grafanaUser: ''
# grafanaPassword: ''
#
# You can skip some parts of the deployment (useful when deploying partailly again)
# skipBootstrap (will not run initial bootstrapping - creating logs and users, but you don't need to skip it - bootstrap pod detects already created resources)
# skipCrons (will not create new cronjobs, you should set it when cron jobs are already created, if you want to recreate cron jobs, delete existing ones first and do not set this flag)
# skipAffiliations (will not create new affiliations cronjobs, you should set it when affiliations cron jobs are already created, if you want to recreate cron jobs, delete existing ones first and do not set this flag)
# skipGrafanas (will not create Grafana deployments)
# skipPVs (will not attempt to create persistent volume claims, this is usually needed to avoid creating existing resource)
# skipProvisions (will not create provisioning pods, usually not needed, provisioning pod will detect already provisioned projects and only provision new ones)
# skipSecrets (will not attempt to create secrets, if you want to create new secrets delete current secrets first and do not set this flag)
# skipServices (will not attempt to create services (Load Balancers))
# skipPostgres (will not attempt to create patroni postgres)
# skipIngress (will not attempt to create ingress)
# skipStatic (will not create devstats nginx static pages)
# skipBackupsPV (will not attempt to create backups PV)
# skipBackups (will not attempt to create backups cronjob)
# skipVacuum (will not attempt to create vacuum cronjob)
# skipGA (will skip setting Google Analytics)
# skipNamespaces (will skip creating devstats-test and devstats-prod namespaces)
# skipBootstrap: 1
# skipCrons: 1
# skipAffiliations: 1
# skipGrafanas: 1
# skipPVs: 1
# skipProvisions: 1
# skipSecrets: 1
# skipServices: 1
# skipPostgres: 1
# skipIngress: 1
# skipStatic: 1
# skipBackupsPV: 1
# skipBackups: 1
# skipVacuum: ''
# skipGA: 1
# skipNamespaces: 1
#
# You can overwrite the number of CPU autodetected in each pod, setting this to 1 will make each pod single-threaded
# nCPUs: 0
#
# Other evrironment options
# affiliationsCommandArgs:
#   - "affsarg"
# backupsImage: 'lukaszgryglicki/devstats-prod'
# backupsOnlyProjects: 'kubernetes prometheus fluentd'
# bootstrapCommand: 'sleep'
# bootstrapCommandArgs:
#   - "36000"
#   - "bootarg"
# cmdDebug: 1
# debug: 1
# excludeVars: 'projects_health_partial_html'
# forceComputeAll: 1
# githubDebug: 1
# grafanaCommandArgs:
#   - "36000"
#   - arg2
# ingressClass: 'nginx-test'
# ingressClass: 'nginx-prod'
# namespace: 'devstats-prod'
# onlyMetrics: 'events,tz'
# onlyGHA: '1'
# overwritePostgresCommand: true
# postgresCommand: 'sleep'
# postgresCommandArgs:
#   - "36000"
# postgresImageName: 'jberkus/simple-patroni:v3'
# postgresImageName: 'lukaszgryglicki/devstats-patroni'
# postgresImageName: 'lukaszgryglicki/devstats-patroni-new'
# periods: 'd7:t,m:f,q:t,y10:f'
# periods: 'c_j_i:t,c_i_g:t,c_g_n:t,c_i_n:t,c_j_g:t'
# projectsOverride: '+azf,+cncf,+fn,+istio,+knative,+linux,+opencontainers,+openfaas,+openwhisk,+riff,+rkt,+sam,+zephyr'
# provisionImage: 'lukaszgryglicki/devstats-prod'
# provisionCommand: './devstats-helm/reinit.sh'
# provisionCommand: './devstats-helm/repos.sh'
# provisionCommand: './devstats-helm/repo_groups.sh'
# provisionCommand: './devstats-helm/affs.sh'
# provisionCommand: './devstats-helm/annotations.sh'
# provisionCommand: './devstats-helm/vars.sh'
# provisionCommand: './devstats-helm/health.sh'
# provisionCommand: './devstats-helm/clear_devstats_running_flag.sh'
# provisionCommand: './devstats-helm/set_provisioned_flag.sh'
# provisionCommand: './devstats-helm/flags.sh'
# provisionCommand: './devstats-helm/add_metric.sh'
# provisionCommand: './devstats-helm/restore.sh'
# provisionCommand: './devstats-helm/restore_artificial_all.sh'
# provisionCommand: './devstats-helm/grants.sh'
# provisionCommand: './devstats-helm/periods.sh'
# provisionCommand: 'sleep'
# provisionCommandArgs:
#   - "36000"
# queryOut: 1
# reposDir: "/root/devstats_repos/"
# restoreFrom: 'https://teststats.cncf.io/'
# runTests: true
# skipMetrics: 'users_activity,committers_cum'
# skipMetrics: 'projects_health'
# skipAddAll: '1' # will skip adding to 'All ...' project regardless of forceAddAllsetting
# forceAddAll: '' # will force adding to 'All ...' project even if some cro job already created few events with a new project's main repo (so checking for main repo to skip adding to 'All ...' is not enough).
# https://itnext.io/efs-persistent-volumes-on-aws-kubernetes-193e0035bbfb
# sslEnv: test
# useRepos: '1'
# storageAccessModes: ReadWriteMany
# storageClass: efs
# storageClass: gp2
# storageClass: openebs-hostpath
# storageClass: nfs-openebs-localstorage
# syncImage: 'lukaszgryglicki/devstats-minimal-prod'
# syncCommandArgs:
#   - "syncarg"
# backupsCommand: '/bin/sleep'
# backupsCommandArgs:
#   - "36000s"
affiliations: 'github_users.json'
affiliationsCommand: './devstats-helm/affs.sh'
affiliationsCronHistoryLimit: 2
affiliationsCronFailedHistoryLimit: 1
affiliationsCronStartingDeadlineSeconds: 300
affiliationsGetAffsFiles: '1'
affiliationsImage: 'lukaszgryglicki/devstats-test'
affiliationsPodName: 'devstats-affiliations'
affiliationsRestartPolicy: Never
appNodeSelector:
  node: devstats-app
backupsNodeSelector:
  node: devstats-app
dbNodeSelector:
  node2: devstats-db
backupsCron: '45 3 * * *'
backupsCronHistoryLimit: 2
backupsCronFailedHistoryLimit: 1
backupsCronStartingDeadlineSeconds: 300
backupsCommand: './devstats-helm/backups.sh'
backupsOnlyProjects: ''
backupsImage: 'lukaszgryglicki/devstats-test'
backupsPodName: 'devstats-backups'
backupsProdServer: ''
backupsPVName: devstats-backups
backupsPVSize: '160Gi'
backupsRestartPolicy: Never
backupsStorageAccessModes: ReadWriteMany
backupsStorageClass: 'nfs-openebs-localstorage'
backupsTestServer: '1'
backupsVolumeMountPath: '/usr/share/nginx/html/backups'
bootstrapCommand: './devstats-helm/deploy_all.sh'
bootstrapLDrop: ''
bootstrapNoCreate: ''
bootstrapPodName: devstats-provision-bootstrap
bootstrapRestartPolicy: Never
bootstrapUDrop: ''
checkImportedSHA: '1'
companyAcq: "companies.yaml"
concurrencyPolicy: Forbid
domains:
  - name: 'teststats.cncf.io'
    image: 'lukaszgryglicki/devstats-static-test'
    shortname: test
  - name: 'devstats.cncf.io'
    image: 'lukaszgryglicki/devstats-static-prod'
    shortname: prod
  - name: 'devstats.cd.foundation'
    image: 'lukaszgryglicki/devstats-static-cdf'
    shortname: cdf
  - name: 'devstats.graphql.org'
    image: 'lukaszgryglicki/devstats-static-graphql'
    shortname: graphql
forceAddAll: ''
fullnameOverride: devstats
getAffsFiles: ''
grafanaCommand: 'grafana_start.sh'
grafanaImage: 'lukaszgryglicki/devstats-grafana'
grafanaMaxSurge: 1
grafanaMaxUnavailable: 0
grafanaNReplicas: 1
grafanaPodName: devstats-grafana
grafanaPort: 3000
grafanaRestartPolicy: Always
grafanaSecret: grafana-secret
health: ''
imagePullPolicy: Always
ingressClass: 'nginx-test'
indexAffiliationsFrom: 0
indexAffiliationsTo: 100
indexCronsFrom: 0
indexCronsTo: 100
indexDomainsFrom: 0
indexDomainsTo: 4
indexGrafanasFrom: 0
indexGrafanasTo: 100
indexIngressesFrom: 0
indexIngressesTo: 100
indexProvisionsFrom: 0
indexProvisionsTo: 100
indexPVsFrom: 0
indexPVsTo: 100
indexServicesFrom: 0
indexServicesTo: 100
indexStaticsFrom: 0
indexStaticsTo: 4
limitsBackupsCPU: '8000m'
limitsBackupsMemory: '32Gi'
limitsBootstrapCPU: '4000m'
limitsBootstrapMemory: '8Gi'
limitsAffiliationsCPU: '16000m'
limitsAffiliationsMemory: '128Gi'
limitsCronsCPU: '16000m'
limitsCronsMemory: '128Gi'
limitsGrafanasCPU: '16000m'
limitsGrafanasMemory: '32Gi'
limitsPostgresCPU: '56000m'
limitsPostgresMemory: '380Gi'
limitsProvisionsCPU: '16000m'
limitsProvisionsMemory: '128Gi'
limitsReportsCPU: '2000m'
limitsReportsMemory: '8Gi'
limitsStaticsCPU: '4000m'
limitsStaticsMemory: '2Gi'
limitsVacuumCPU: '1000m'
limitsVacuumMemory: '1Gi'
name: devstats
namespace: 'devstats-test'
nameOverride: devstats
oauthSecret: github-oauth
onlyGHA: ''
patroniLoopWait: 15
patroniTtl: 60
patroniRetryTimeout: 60
patroniMasterStartTimeout: 600
patroniMaximumLagOnFailover: 5368709120
pgSecret: pg-db
prodNamespace: 'devstats-prod'
projectsFile: 'devstats-helm/projects.yaml'
projectsOverride: ''
provisionCommand: './devstats-helm/deploy_all.sh'
provisionImage: 'lukaszgryglicki/devstats-test'
provisionPodName: devstats-provision
provisionRestartPolicy: Never
postgresPort: 5432
postgresSvcName: 'devstats-postgres'
postgresImageName: 'lukaszgryglicki/devstats-patroni-new'
postgresStorageSize: '3000Gi'
postgresNodes: 4
postgresSharedBuffers: '96GB'
postgresMaxConn: 1024
postgresMaxParallelWorkersPerGather: 12
postgresMaxWorkerProcesses: 56
postgresMaxParallelWorkers: 56
postgresWorkMem: '2GB'
postgresWalBuffers: '128MB'
postgresMaxTempFile: '50GB'
postgresUseSlots: true
postgresHotStandby: 'on'
postgresWalLogHints: 'on'
postgresWalKeepSegments: 10
postgresWalLevel: 'hot_standby'
postgresMaxWalSenders: 5
postgresMaxReplicationSlots: 5
prodServer: ''
pvName: devstats-pvc
reinitDropDB: ''
mergeMode: ''
reportsPod: ''
reportsPodName: 'devstats-reports'
reportsCommand: '/bin/sleep'
reportsCommandArgs: ['36525d']
reportsImage: 'lukaszgryglicki/devstats-reports'
reportsRestartPolicy: 'Never'
reportsVolumeMountPath: '/data'
requestsBackupsCPU: '200m'
requestsBackupsMemory: '512Mi'
requestsBootstrapCPU: '300m'
requestsBootstrapMemory: '512Mi'
requestsAffiliationsCPU: '500m'
requestsAffiliationsMemory: '1Gi'
requestsCronsCPU: '300m'
requestsCronsMemory: '1Gi'
requestsGrafanasCPU: '300m'
requestsGrafanasMemory: '1Gi'
requestsPostgresCPU: '8000m'
requestsPostgresMemory: '32Gi'
requestsProvisionsCPU: '1000m'
requestsProvisionsMemory: '2Gi'
requestsReportsCPU: '200m'
requestsReportsMemory: '256Mi'
requestsStaticsCPU: '300m'
requestsStaticsMemory: '512Mi'
requestsVacuumCPU: '100m'
requestsVacuumMemory: '256Mi'
restoreFrom: 'https://devstats.cncf.io/'
secretType: Opaque
servicePodName: devstats-service
storageAccessModes: ReadWriteOnce
storageClass: openebs-hostpath
skipAddAll: ''
skipTemp: 1
# We're using patroni's autovacuum feature.
skipVacuum: 1
staticImage: 'lukaszgryglicki/devstats-static-default'
staticNReplicas: 1
syncCommand: devstats
syncCronHistoryLimit: 2
syncCronFailedHistoryLimit: 1
syncCronStartingDeadlineSeconds: 180
syncImage: 'lukaszgryglicki/devstats-minimal-test'
syncPodName: devstats
syncRestartPolicy: Never
sslEnv: prod
testServer: '1'
testNamespace: 'devstats-test'
testsImage: 'lukaszgryglicki/devstats-tests'
testsPodName: devstats-tests
testsRestartPolicy: Never
vacuumCron: '0 0 * * 6'
vacuumCronHistoryLimit: 1
vacuumCronFailedHistoryLimit: 1
vacuumCronStartingDeadlineSeconds: 300
vacuumCommand: './devel/vacuum_all.sh'
vacuumImage: 'lukaszgryglicki/devstats-test'
vacuumPodName: 'devstats-vacuum'
vacuumRestartPolicy: Never
volumeMountName: data
volumeMountPath: '/root'
volumeName: data
useFlags: '1'
useRepos: ''
useBackupsResourcesLimits: 1
useBootstrapResourcesLimits: 1
useAffiliationsResourcesLimits: 1
useCronsResourcesLimits: 1
useGrafanasResourcesLimits: 1
useProvisionsResourcesLimits: 1
usePostgresResourcesLimits: 1
useReportsResourcesLimits: 1
useStaticsResourcesLimits: 1
useVacuumResourcesLimits: 1
waitForBootstrap: 120
waitForPostgres: 30
projects:
  - proj: kubernetes
    url: k8s
    db: gha
    icon: 'k8s'
    org: 'Kubernetes'
    repo: 'kubernetes/kubernetes'
    cron: '7 * * * *'
    affCron: '0 2 * * 0'
    affSkipTemp: '1'
    disk: 50Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-1'
    i: 0
  - proj: prometheus
    url: prometheus
    db: prometheus
    icon: 'prometheus'
    org: 'Prometheus'
    repo: 'prometheus/prometheus'
    cron: '8 * * * *'
    affCron: '0 2 * * 1'
    affSkipTemp: '1'
    disk: 5Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-3'
    i: 1
  - proj: opentracing
    url: opentracing
    db: opentracing
    icon: 'opentracing'
    org: 'OpenTracing'
    repo: 'opentracing/opentracing-go'
    cron: '8 * * * *'
    affCron: '0 2 * * 2'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-4'
    i: 2
  - proj: fluentd
    url: fluentd
    db: fluentd
    icon: 'fluentd'
    org: 'Fluentd'
    repo: 'fluent/fluentd'
    cron: '9 * * * *'
    affCron: '0 2 * * 3'
    affSkipTemp: '1'
    disk: 4Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-5'
    i: 3
  - proj: linkerd
    url: linkerd
    db: linkerd
    icon: 'linkerd'
    org: 'Linkerd'
    repo: 'linkerd/linkerd'
    cron: '9 * * * *'
    affCron: '0 2 * * 4'
    affSkipTemp: '1'
    disk: 4Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-6'
    i: 4
  - proj: grpc
    url: grpc
    db: grpc
    icon: 'grpc'
    org: 'gRPC'
    repo: 'grpc/grpc'
    cron: '10 * * * *'
    affCron: '0 2 * * 5'
    affSkipTemp: '1'
    disk: 4Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-7'
    i: 5
  - proj: coredns
    url: coredns
    db: coredns
    icon: 'coredns'
    org: 'CoreDNS'
    repo: 'coredns/coredns'
    cron: '10 * * * *'
    affCron: '0 2 * * 6'
    affSkipTemp: '1'
    disk: 4Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-9'
    i: 6
  - proj: containerd
    url: containerd
    db: containerd
    icon: 'containerd'
    org: 'containerd'
    repo: 'containerd/containerd'
    cron: '11 * * * *'
    affCron: '15 2 * * 0'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-10'
    i: 7
  - proj: rkt
    url: rkt
    db: rkt
    icon: 'rkt'
    org: 'rkt'
    repo: 'rkt/rkt'
    cron: '11 * * * *'
    affCron: '15 2 * * 1'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 0, 0, 0]
    ga: 'UA-108085315-11'
    i: 8
  - proj: cni
    url: cni
    db: cni
    icon: 'cni'
    org: 'CNI'
    repo: 'containernetworking/cni'
    cron: '11 * * * *'
    affCron: '15 2 * * 2'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-12'
    i: 9
  - proj: envoy
    url: envoy
    db: envoy
    icon: 'envoy'
    org: 'Envoy'
    repo: 'envoyproxy/envoy'
    cron: '12 * * * *'
    affCron: '15 2 * * 3'
    affSkipTemp: '1'
    disk: 4Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-13'
    i: 10
  - proj: jaeger
    url: jaeger
    db: jaeger
    icon: 'jaeger'
    org: 'Jaeger'
    repo: 'jaegertracing/jaeger'
    cron: '12 * * * *'
    affCron: '15 2 * * 4'
    affSkipTemp: '1'
    disk: 4Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-14'
    i: 11
  - proj: notary
    url: notary
    db: notary
    icon: 'notary'
    org: 'Notary'
    repo: 'theupdateframework/notary'
    cron: '13 * * * *'
    affCron: '15 2 * * 5'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-15'
    i: 12
  - proj: tuf
    url: tuf
    db: tuf
    icon: 'tuf'
    org: 'TUF'
    repo: 'theupdateframework/tuf'
    cron: '13 * * * *'
    affCron: '15 2 * * 6'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-16'
    i: 13
  - proj: rook
    url: rook
    db: rook
    icon: 'rook'
    org: 'Rook'
    repo: 'rook/rook'
    cron: '13 * * * *'
    affCron: '30 2 * * 0'
    affSkipTemp: '1'
    disk: 4Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-17'
    i: 14
  - proj: vitess
    url: vitess
    db: vitess
    icon: 'vitess'
    org: 'Vitess'
    repo: 'vitessio/vitess'
    cron: '14 * * * *'
    affCron: '30 2 * * 1'
    affSkipTemp: '1'
    disk: 5Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-18'
    i: 15
  - proj: nats
    url: nats
    db: nats
    icon: 'nats'
    org: 'NATS'
    repo: 'nats-io/gnatsd'
    cron: '14 * * * *'
    affCron: '30 2 * * 2'
    affSkipTemp: '1'
    disk: 5Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-21'
    i: 16
  - proj: opa
    url: opa
    db: opa
    icon: 'opa'
    org: 'OPA'
    repo: 'open-policy-agent/opa'
    cron: '14 * * * *'
    affCron: '30 2 * * 3'
    affSkipTemp: '1'
    disk: 5Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-22'
    i: 17
  - proj: spiffe
    url: spiffe
    db: spiffe
    icon: 'spiffe'
    org: 'SPIFFE'
    repo: 'spiffe/spiffe'
    cron: '15 * * * *'
    affCron: '30 2 * * 4'
    affSkipTemp: '1'
    disk: 4Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-23'
    i: 18
  - proj: spire
    url: spire
    db: spire
    icon: 'spire'
    org: 'SPIRE'
    repo: 'spiffe/spire'
    cron: '15 * * * *'
    affCron: '30 2 * * 5'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-24'
    i: 19
  - proj: cloudevents
    url: cloudevents
    db: cloudevents
    icon: 'cloudevents'
    org: 'CloudEvents'
    repo: 'cloudevents/spec'
    cron: '15 * * * *'
    affCron: '30 2 * * 6'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-25'
    i: 20
  - proj: telepresence
    url: telepresence
    db: telepresence
    icon: 'telepresence'
    org: 'Telepresence'
    repo: 'telepresenceio/telepresence'
    cron: '15 * * * *'
    affCron: '45 2 * * 0'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-26'
    i: 21
  - proj: helm
    url: helm
    db: helm
    icon: 'helm'
    org: 'Helm'
    repo: 'helm/helm'
    cron: '16 * * * *'
    affCron: '45 2 * * 1'
    affSkipTemp: '1'
    disk: 8Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-27'
    i: 22
  - proj: openmetrics
    url: openmetrics
    db: openmetrics
    icon: 'openmetrics'
    org: 'OpenMetrics'
    repo: 'OpenObservability/OpenMetrics'
    cron: '16 * * * *'
    affCron: '45 2 * * 2'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-28'
    i: 23
  - proj: harbor
    url: harbor
    db: harbor
    icon: 'harbor'
    org: 'Harbor'
    repo: 'goharbor/harbor'
    cron: '17 * * * *'
    affCron: '45 2 * * 3'
    affSkipTemp: '1'
    disk: 4Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-29'
    i: 24
  - proj: etcd
    url: etcd
    db: etcd
    icon: 'etcd'
    org: 'etcd'
    repo: 'etcd-io/etcd'
    cron: '17 * * * *'
    affCron: '45 2 * * 4'
    affSkipTemp: '1'
    disk: 4Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-30'
    i: 25
  - proj: tikv
    url: tikv
    db: tikv
    icon: 'tikv'
    org: 'TiKV'
    repo: 'tikv/tikv'
    cron: '17 * * * *'
    affCron: '45 2 * * 5'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-31'
    i: 26
  - proj: cortex
    url: cortex
    db: cortex
    icon: 'cortex'
    org: 'Cortex'
    repo: 'cortexproject/cortex'
    cron: '18 * * * *'
    affCron: '45 2 * * 6'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-32'
    i: 27
  - proj: buildpacks
    url: buildpacks
    db: buildpacks
    icon: 'buildpacks'
    org: 'Buildpacks'
    repo: 'buildpack/lifecycle'
    cron: '18 * * * *'
    affCron: '0 3 * * 0'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-33'
    i: 28
  - proj: falco
    url: falco
    db: falco
    icon: 'falco'
    org: 'Falco'
    repo: 'falcosecurity/falco'
    cron: '18 * * * *'
    affCron: '0 3 * * 1'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-34'
    i: 29
  - proj: dragonfly
    url: dragonfly
    db: dragonfly
    icon: 'dragonfly'
    org: 'Dragonfly'
    repo: 'dragonflyoss/Dragonfly'
    cron: '19 * * * *'
    affCron: '0 3 * * 2'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-35'
    i: 30
  - proj: virtualkubelet
    url: virtualkubelet
    db: virtualkubelet
    icon: 'virtualkubelet'
    org: 'Virtual Kubelet'
    repo: 'virtual-kubelet/virtual-kubelet'
    cron: '19 * * * *'
    affCron: '0 3 * * 3'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-36'
    i: 31
  - proj: kubeedge
    url: kubeedge
    db: kubeedge
    icon: 'kubeedge'
    org: 'KubeEdge'
    repo: 'kubeedge/kubeedge'
    cron: '21 * * * *'
    affCron: '0 3 * * 4'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-43'
    i: 32
  - proj: brigade
    url: brigade
    db: brigade
    icon: 'brigade'
    org: 'Brigade'
    repo: 'Azure/brigade'
    cron: '21 * * * *'
    affCron: '0 3 * * 5'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-44'
    i: 33
  - proj: crio
    url: crio
    db: crio
    icon: 'crio'
    org: 'CRI-O'
    repo: 'cri-o/cri-o'
    cron: '22 * * * *'
    affCron: '0 3 * * 6'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-45'
    i: 34
  - proj: networkservicemesh
    url: networkservicemesh
    db: networkservicemesh
    icon: 'networkservicemesh'
    org: 'Network Service Mesh'
    repo: 'networkservicemesh/networkservicemesh'
    cron: '23 * * * *'
    affCron: '15 3 * * 0'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-46'
    i: 35
  - proj: openebs
    url: openebs
    db: openebs
    icon: 'openebs'
    org: 'OpenEBS'
    repo: 'openebs/openebs'
    cron: '24 * * * *'
    affCron: '15 3 * * 1'
    affSkipTemp: '1'
    disk: 10Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-47'
    i: 36
  - proj: opentelemetry
    url: opentelemetry
    db: opentelemetry
    icon: 'opentelemetry'
    org: 'OpenTelemetry'
    repo: 'open-telemetry/opentelemetry-java'
    cron: '24 * * * *'
    affCron: '15 3 * * 2'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-48'
    i: 37
  - proj: all
    url: all
    db: allprj
    icon: 'cncf'
    org: 'All CNCF'
    repo: '-'
    cron: '27 * * * *'
    affCron: '15 7 * * 6'
    affSkipTemp: '1'
    disk: 150Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-20'
    i: 38
  - proj: tekton
    url: tekton
    db: tekton
    icon: 'tekton'
    org: 'Tekton'
    repo: 'knative/build'
    cron: '22 * * * *'
    affCron: '15 3 * * 3'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 0, 1, 0]
    ga: 'UA-108085315-39'
    i: 39
  - proj: spinnaker
    url: spinnaker
    db: spinnaker
    icon: 'spinnaker'
    org: 'Spinnaker'
    repo: 'spinnaker/spinnaker'
    cron: '20 * * * *'
    affCron: '15 3 * * 4'
    affSkipTemp: '1'
    disk: 4Gi
    domains: [1, 0, 1, 0]
    ga: 'UA-108085315-38'
    i: 40
  - proj: jenkinsx
    url: jenkinsx
    db: jenkinsx
    icon: 'jenkinsx'
    org: 'Jenkins X'
    repo: 'jenkins-x/jx'
    cron: '22 * * * *'
    affCron: '15 3 * * 5'
    affSkipTemp: '1'
    disk: 6Gi
    domains: [1, 0, 1, 0]
    ga: 'UA-108085315-41'
    i: 41
  - proj: jenkins
    url: jenkins
    db: jenkins
    icon: 'jenkins'
    org: 'Jenkins'
    repo: 'jenkinsci/jenkins'
    cron: '23 * * * *'
    affCron: '15 3 * * 6'
    affSkipTemp: '1'
    disk: 40Gi
    domains: [1, 0, 1, 0]
    ga: 'UA-108085315-40'
    i: 42
  - proj: allcdf
    url: allcdf
    db: allcdf
    icon: 'cdf'
    org: 'All CDF'
    repo: '-'
    cron: '28 * * * *'
    affCron: '0 6 * * 0'
    affSkipTemp: '1'
    disk: 50Gi
    domains: [1, 0, 1, 0]
    ga: 'UA-108085315-42'
    i: 43
  - proj: graphqljs
    url: graphqljs
    db: graphqljs
    icon: 'graphqljs'
    org: 'GraphQL JavaScript'
    repo: 'graphql/graphql-js'
    cron: '25 * * * *'
    affCron: '0 6 * * 1'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 0, 0, 1]
    ga: ''
    i: 44
  - proj: graphiql
    url: graphiql
    db: graphiql
    icon: 'graphiql'
    org: 'GraphQL IDE'
    repo: 'graphql/graphiql'
    cron: '25 * * * *'
    affCron: '0 6 * * 2'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 0, 0, 1]
    ga: ''
    i: 45
  - proj: graphqlspec
    url: graphqlspec
    db: graphqlspec
    icon: 'graphqlspec'
    org: 'GraphQL Spec'
    repo: 'graphql/graphql-spec'
    cron: '26 * * * *'
    affCron: '0 6 * * 3'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 0, 0, 1]
    ga: ''
    i: 46
  - proj: expressgraphql
    url: expressgraphql
    db: expressgraphql
    icon: 'expressgraphql'
    org: 'Express GraphQL'
    repo: 'graphql/express-graphql'
    cron: '26 * * * *'
    affCron: '0 6 * * 4'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 0, 0, 1]
    ga: ''
    i: 47
  - proj: graphql
    url: graphql
    db: graphql
    icon: 'graphql'
    org: 'GraphQL'
    repo: 'graphql/graphql-js'
    cron: '24 * * * *'
    affCron: '0 6 * * 5'
    affSkipTemp: '1'
    disk: 30Gi
    domains: [1, 0, 0, 1]
    ga: ''
    i: 48
  - proj: cncf
    url: cncf
    db: cncf
    icon: 'cncf'
    org: 'CNCF'
    repo: 'cncf/landscapeapp'
    cron: '19 * * * *'
    affCron: '0 6 * * 6'
    affSkipTemp: '1'
    disk: 30Gi
    domains: [1, 0, 0, 0]
    ga: 'UA-108085315-8'
    i: 49
  - proj: opencontainers
    url: opencontainers
    db: opencontainers
    icon: 'opencontainers'
    org: 'OCI'
    repo: 'opencontainers/runc'
    cron: '20 * * * *'
    affCron: '15 6 * * 0'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 0, 0, 0]
    ga: 'UA-108085315-19'
    i: 50
  - proj: istio
    url: istio
    db: istio
    icon: 'cncf'
    org: 'Istio'
    repo: 'istio/istio'
    cron: '20 * * * *'
    affCron: '15 6 * * 1'
    affSkipTemp: '1'
    disk: 8Gi
    domains: [1, 0, 0, 0]
    ga: ''
    i: 51
  - proj: knative
    url: knative
    db: knative
    icon: 'cncf'
    org: 'Knative'
    repo: 'knative/serving'
    cron: '21 * * * *'
    affCron: '15 6 * * 2'
    affSkipTemp: '1'
    disk: 4Gi
    domains: [1, 0, 0, 0]
    ga: ''
    i: 52
  - proj: zephyr
    url: zephyr
    db: zephyr
    icon: 'cncf'
    org: 'Zephyr'
    repo: 'zephyrproject-rtos/zephyr'
    cron: '29 * * * *'
    affCron: '15 6 * * 3'
    affSkipTemp: '1'
    disk: 8Gi
    domains: [1, 0, 0, 0]
    ga: ''
    i: 53
  - proj: linux
    url: linux
    db: linux
    icon: 'cncf'
    org: 'Linux'
    repo: 'torvalds/linux'
    cron: '29 * * * *'
    affCron: '15 6 * * 4'
    affSkipTemp: '1'
    disk: 10Gi
    domains: [1, 0, 0, 0]
    ga: ''
    i: 54
  - proj: thanos
    url: thanos
    db: thanos
    icon: 'thanos'
    org: 'Thanos'
    repo: 'thanos-io/thanos'
    cron: '24 * * * *'
    affCron: '15 6 * * 5'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-49'
    i: 55
  - proj: flux
    url: flux
    db: flux
    icon: 'flux'
    org: 'Flux'
    repo: 'fluxcd/flux'
    cron: '25 * * * *'
    affCron: '15 6 * * 6'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-108085315-50'
    i: 56
  - proj: intoto
    url: intoto
    db: intoto
    icon: 'intoto'
    org: 'in-toto'
    repo: 'in-toto/in-toto'
    cron: '25 * * * *'
    affCron: '30 6 * * 0'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-145264316-1'
    i: 57
  - proj: strimzi
    url: strimzi
    db: strimzi
    icon: 'strimzi'
    org: 'Strimzi'
    repo: 'strimzi/strimzi-kafka-operator'
    cron: '26 * * * *'
    affCron: '30 6 * * 1'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-145264316-2'
    i: 58
  - proj: sam
    url: sam
    db: sam
    icon: 'cncf'
    org: 'AWS SAM'
    repo: 'awslabs/serverless-application-model'
    cron: '26 * * * *'
    affCron: '30 6 * * 2'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 0, 0, 0]
    ga: ''
    i: 59
  - proj: azf
    url: azf
    db: azf
    icon: 'cncf'
    org: 'AZF'
    repo: 'Azure/azure-webjobs-sdk'
    cron: '26 * * * *'
    affCron: '30 6 * * 3'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 0, 0, 0]
    ga: ''
    i: 60
  - proj: riff
    url: riff
    db: riff
    icon: 'cncf'
    org: 'Pivotal Riff'
    repo: 'projectriff/riff'
    cron: '27 * * * *'
    affCron: '30 6 * * 4'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 0, 0, 0]
    ga: ''
    i: 61
  - proj: fn
    url: fn
    db: fn
    icon: 'cncf'
    org: 'Oracle Fn'
    repo: 'fnproject/fn'
    cron: '27 * * * *'
    affCron: '30 6 * * 5'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 0, 0, 0]
    ga: ''
    i: 62
  - proj: openwhisk
    url: openwhisk
    db: openwhisk
    icon: 'cncf'
    org: 'Apache OpenWhisk'
    repo: 'apache/openwhisk'
    cron: '27 * * * *'
    affCron: '30 6 * * 6'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 0, 0, 0]
    ga: ''
    i: 63
  - proj: openfaas
    url: openfaas
    db: openfaas
    icon: 'cncf'
    org: 'OpenFaaS'
    repo: 'openfaas/faas'
    cron: '28 * * * *'
    affCron: '45 6 * * 0'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 0, 0, 0]
    ga: ''
    i: 64
  - proj: kubevirt
    url: kubevirt
    db: kubevirt
    icon: 'kubevirt'
    org: 'KubeVirt'
    repo: 'kubevirt/kubevirt'
    cron: '28 * * * *'
    affCron: '45 6 * * 1'
    affSkipTemp: '1'
    disk: 3Gi
    domains: [1, 1, 0, 0]
    ga: 'UA-145264316-3'
    i: 65
